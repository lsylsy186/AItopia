// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// 1.sqlite方案
// datasource db {
// provider = "sqlite"
// url      = env("DATABASE_URL")

// 1.2 postgresql proxy方案
// provider = "postgresql"
// directUrl = env("DIRECT_URL")
// }

// 2.vercel postgre方案
// datasource db {
//   provider          = "postgresql"
//   url               = env("POSTGRES_PRISMA_URL") // uses connection pooling
//   directUrl         = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
//   shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING") // used for migrations
// }

// 3.vercel postgre with supabase方案
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  Super
  Admin
  Mod
  Sell
  User
}

enum ProductLine {
  Normal
  Hebao
  Furniture
  Resturant
}

model User {
  id          String      @id @default(uuid())
  email       String      @unique
  name        String?
  password    String
  role        Role        @default(User)
  productLine ProductLine @default(Normal)
  posts       Post[]
  profile     Profile?
  account     Account?

  createdAt DateTime @default(now()) @db.Timestamp(6) // 注册时间
}

model Post {
  id        Int     @id @default(autoincrement())
  title     String
  content   String?
  published Boolean @default(false)
  author    User    @relation(fields: [authorId], references: [id])
  authorId  String
}

model Profile {
  id     Int     @id @default(autoincrement())
  bio    String?
  userId String  @unique
  user   User    @relation(fields: [userId], references: [id])
}

model Account {
  id      Int @id @default(autoincrement())
  balance Int @default(0)

  // relation
  user      User   @relation(fields: [accountId], references: [id])
  accountId String @unique
}
